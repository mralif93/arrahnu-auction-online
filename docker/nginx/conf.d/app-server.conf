# =============================================================================
# NGINX CONFIGURATION FOR SERVER PRODUCTION DEPLOYMENT
# =============================================================================
# This configuration is optimized for production server environment
# =============================================================================

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name arrahnuauction.muamalat.com.my www.arrahnuauction.muamalat.com.my;
    return 301 https://$server_name$request_uri;
}

# HTTPS server configuration
server {
    listen 443 ssl http2;
    server_name arrahnuauction.muamalat.com.my www.arrahnuauction.muamalat.com.my;
    
    # Document root - adjust path for server deployment
    root /var/www/html/arrahnu-auction-online/public;
    index index.php index.html index.htm;

    # SSL Configuration
    ssl_certificate /etc/ssl/certs/arrahnuauction.muamalat.com.my.crt;
    ssl_certificate_key /etc/ssl/private/arrahnuauction.muamalat.com.my.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data: https:; connect-src 'self'; frame-src 'none';" always;

    # Logging
    access_log /var/log/nginx/arrahnu.access.log;
    error_log /var/log/nginx/arrahnu.error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;

    # Handle Laravel routes
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Handle PHP files
    location ~ \.php$ {
        # For server deployment, adjust PHP-FPM socket path
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        # Alternative for TCP connection:
        # fastcgi_pass 127.0.0.1:9000;
        
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # FastCGI optimizations for production
        fastcgi_buffers 32 32k;
        fastcgi_buffer_size 64k;
        fastcgi_read_timeout 300;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_busy_buffers_size 64k;
        fastcgi_temp_file_write_size 64k;
    }

    # API endpoints with rate limiting
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Login endpoints with strict rate limiting
    location ~ ^/(login|register|password) {
        limit_req zone=login burst=3 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
    }

    location ~ /\.ht {
        deny all;
    }

    location ~ /composer\.(json|lock) {
        deny all;
    }

    location ~ /package\.(json|lock) {
        deny all;
    }

    location ~ /\.env {
        deny all;
    }

    # Cache static files aggressively
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|woff|woff2|ttf|eot|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # Enable CORS for fonts
        location ~* \.(woff|woff2|ttf|eot)$ {
            add_header Access-Control-Allow-Origin *;
        }
    }

    # Cache HTML files for a shorter period
    location ~* \.(html|htm)$ {
        expires 1h;
        add_header Cache-Control "public";
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Status endpoint for monitoring
    location /status {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    # Block common attack patterns
    location ~* \.(asp|aspx|cgi|pl|py)$ {
        deny all;
    }

    # Prevent access to version control
    location ~ /\.(git|svn|hg) {
        deny all;
    }

    # Limit file upload size
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;
}
