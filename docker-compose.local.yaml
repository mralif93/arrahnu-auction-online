services:
  # PHP Application
  app:
    build: ./php
    container_name: ${CONTAINER_APP_NAME:-arrahnu_app_local}
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    networks:
      - arrahnu_network
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "php", "-r", "echo 'PHP is running';"]
      timeout: 10s
      retries: 5
      start_period: 10s

  # Nginx Web Server (Local - HTTP only)
  nginx:
    build: ./nginx
    container_name: ${CONTAINER_NGINX_NAME:-arrahnu_nginx_local}
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8080}:${NGINX_PORT:-80}"
    volumes:
      - ./:/var/www/html
      - ./nginx/local.conf:/etc/nginx/conf.d/default.conf
    networks:
      - arrahnu_network
    depends_on:
      app:
        condition: service_healthy
    env_file:
      - .env

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ${CONTAINER_DB_NAME:-arrahnu_db_local}
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-arrahnu_auction}
      POSTGRES_USER: ${DB_USERNAME:-arrahnu_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-user123}
      POSTGRES_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root123}
    ports:
      - "${DB_PORT:-3307}:5432"
    volumes:
      - db_data_local:/var/lib/postgresql/data
    networks:
      - arrahnu_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-arrahnu_user} -d ${DB_DATABASE:-arrahnu_auction}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for PostgreSQL Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: arrahnu_pgadmin_local
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@arrahnu.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - arrahnu_network
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data_local:
  cloudbeaver_data:
  pgadmin_data:

networks:
  arrahnu_network:
    driver: bridge
